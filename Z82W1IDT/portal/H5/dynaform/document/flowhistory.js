//添加意见var CommonOpinions = {		config : {			status : "",	//设置保存状态，新建或编辑			mode : "select"		//模式：编辑或选择		},		init : function(){			this.doSearch();		},		//设置保存状态，新建或编辑		setState : function(status){			this.config.status = status;		},		//设置模式，新建或选择		setMode : function(status){			this.config.mode = status;		},		bindEvent : function($html){	//事件绑定			$html.on("click", "li", function(){                var e=arguments.callee.caller.arguments[0]||window.event;                e.stopPropagation();								if(CommonOpinions.config.mode == "select"){					CommonOpinions.addOpinion($(this), e);				}			}).on("click", ".del", function(){	//删除                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				CommonOpinions.doDelete($(this));			}).on("click", ".editSub", function(){	//编辑                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				CommonOpinions.setState("edit");	//设置为编辑状态				var $com = $(this).parents("#commonOpinions");				var $edit = $com.find(".edit");										$edit.show();	//显示编辑框				var $text = $(this).siblings(".text");				var $input = $edit.find("input");				$input.attr("_id", $text.attr("id")).val($text.text()).focus();	//设置编辑值			}).on("click", ".addBtn", function(){	//添加意见                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				CommonOpinions.setState("new");	//设置为新建状态				var $com = $(this).parents("#commonOpinions");				$com.find("ul li i").hide();				$(this).hide();				$com.find(".editBtn").hide();				$com.find(".edit").show();				var $input = $com.find(".edit").find("input");				$input.val("").focus();			}).on("click", ".editBtn", function(){	//编辑意见                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				CommonOpinions.setMode("edit");		//设置为编辑模式				CommonOpinions.setState("new");	//设置为新建状态				$(this).hide();		//隐藏本身				var $com = $(this).parents("#commonOpinions");				$com.find(">ul").addClass("editOpinions");	//增加编辑状态，控制文本宽度				$com.find("ul li i").hide();				$com.find(".addBtn").hide();	//隐藏添加按钮				$com.find(".editSub,.del").show();	//显示删除和编辑操作				$com.find(".edit").show();		//显示编辑框			}).on("click", ".cancel", function(){	//取消                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				CommonOpinions.setMode("select");		//设置为选择模式				var $com = $(this).parents("#commonOpinions");				$com.find(">ul").removeClass("editOpinions");	//移除编辑状态，恢复文本宽度				$com.find(".addBtn,.editBtn").show();	//隐藏添加和编辑按钮				$com.find(".edit").hide();				//隐藏编辑框				$com.find(".editSub, .del").hide();		//隐藏删除和编辑操作			}).on("click", ".save", function(){	//保存                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				CommonOpinions.doSave($(this));				CommonOpinions.setState("new");	//设置为新建状态			}).on("click", "input", function(){	//单行文本                var e=arguments.callee.caller.arguments[0]||window.event;					e.stopPropagation();			}).on("keydown",function(){	//Enter时自动保存                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				if(e && e.keyCode == 13){					CommonOpinions.doSave($(e.target));				}			});			//隐藏常用意见			$(document).click(function(){				$html.hide();			});			//显示常用意见			$("#fieldset_remark_usual").append($html).on("click",function(){                var e=arguments.callee.caller.arguments[0]||window.event;				e.stopPropagation();				$html.toggle();			});		},		//点击添加常用意见		addOpinion : function($me, event){			var $atti = $("textarea[name=_attitude]");			var _text = $me.find(".text").text();			if(_text){				var val = $atti.val().length;				if((val + _text.length) > 140){					showMessage("danger", "字符长度不能超过140个!");					return false;				}			}			var offset = $atti.offset();			var flyer = $('<div style="z-index:10;width:100%;">' + _text + '</div>');			flyer.fly({				start: {					left: event.pageX,					top: event.pageY				},				end: {					left: offset.left+10,					top: offset.top+10,					width: 0,					height: 0				},				onEnd: function(){											var oText = $atti.val();					if(!oText){						$atti.val(_text);					}else{						$atti.val($atti.val() + "," + _text);					}					$('#textarea_counter .count').html($atti.val().length); 				}			});		},		doSearch : function(){	//查询			var params = {					userId : WebUser.id			};			$.ajax({				url : contextPath + "/portal/usersetup/getCommonOpinion.action",				data : params,				dataType : "json",				success : function(result){					if(result && result.status == 1){						var _data = {				    			list : result.data				    	};												var $html = $(template("commonOpitions-tmpl", _data));						CommonOpinions.bindEvent($html);					}				}			});		},		doCheck : function($me){			var rtn = "";			var $com = $me.parents("#commonOpinions");			var $input = $com.find("input");			var leng = $input.val().length;			if(leng && leng>140){				rtn = "字符长度不能超过140个!";			}else if(leng == 0){				rtn = "意见不能为空!";			}			return rtn;		},		doSave : function($me){	//保存			var check = this.doCheck($me);			if(check != ""){				showMessage("danger", check);				return false;			}			var $com = $me.parents("#commonOpinions");			var $input = $com.find("input");			var editType = this.config.status;			if(editType == "new"){				this.doCreate($me);			}else if(editType == "edit"){				this.doUpdate($me);			}			$input.removeAttr("_id").val("");	//重置文本值		},		doUpdate : function($me){	//更新			var $com = $me.parents("#commonOpinions");			var $input = $com.find("input");			var id = $input.attr("_id");			var content = $com.find("input").val();			var params = {					userId : WebUser.id,					id : id,					opinion : content			};			$.ajax({				url : contextPath + "/portal/usersetup/updateCommonOpinion.action",				data : params,				dataType : "json",				success : function(result){					if(result && result.status == 1){						$com.find("ul li #" + id).text(content);					}				}			});		},		doCreate : function($me){	//添加意见			var $com = $me.parents("#commonOpinions");			var params = {					userId : WebUser.id,					opinion : $com.find("input").val()			};			$.ajax({				url : contextPath + "/portal/usersetup/addCommonOpinion.action",				data : params,				dataType : "json",				success : function(result){					if(result && result.status == 1){						var data = result.data;						if(CommonOpinions.config.mode == "select"){							data.showVal = "none";						}						$com.find(".edit").before($(template("commonOpitionsNew-tmpl",result.data)));					}				}			});		},		doDelete : function($me){	//删除意见			var $com = $me.parents("#commonOpinions");			var id = $me.parent().find("a.text").attr("id");			var params = {					userId : WebUser.id,					id : id			};						$.ajax({				url : contextPath + "/portal/usersetup/deleteCommonOpinion.action",				data : params,				dataType : "json",				success : function(result){										if(result && result.status == 1){						$me.parent().remove();					}				}			});		}};var FlowPanel = {	init : function(){				if($("input[activityType='5']").size()==0) return;    	CommonOpinions.init();		//渲染select选择框//		var flowid = $("#flowid")[0].value;//		var url = contextPath + "/portal/share/workflow/runtime/billflow/defi/initopinion.action";//		jQuery.ajax({//			    type:"POST",      //			    url:url,      //			    data:"flowid="+flowid,//			    dataType:"text",//预期服务器返回的数据类型。如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断//			    async:true,   //true为异步请求，false为同步请求//			    success:function(result){//				    if(result != "null"){//				    	CommonOpinions.init(result);//						/**//						var keys = leng(data);//						//						var contents="<option value=''>常用意见</option>";//						for(;keys.length>=1;){//							var key = keys.pop();//							contents= contents+"<option>"+data[key]+"</option>";//						}//						**///				    }//			    },//			    error:function(){     //请求失败后的回调函数。//			        alert("请求失败");//			    }//		});				if($("input[activityType='5']")){			FlowPanel.refreshFlowPanel("init");		}			//$("input[name='input1']").blur(function(){ alert("Custom event triggered."); });			$("#flowHtmlForm textarea[name='_attitude']").bind('input oninput', function() {			$('#textarea_counter .count').html($(this).val().length); 		});	},		/**刷新流程面板， e变量为场景，1、刷新：e=init；2、提交：e=commitTo；3、回退：e=returnTo；4、自由流程：e=freeFlow*/	refreshFlowPanel : function(actionType,act) {				var $dy_refreshObj = jQuery("#_formHtml > #dy_refreshObj");		var formid = $dy_refreshObj.attr("formid");		var docid = $dy_refreshObj.attr("docid");		var userid = $dy_refreshObj.attr("userid");		var flowid = $dy_refreshObj.attr("flowid");		var $auditorList =jQuery("#auditorList");		//当为新建文档（$auditorList.size()==0）、或当前用户在【编辑人】中，显示流程按钮		if ($auditorList.size()==0 || ($auditorList.size()>0 && $auditorList.val().indexOf(userid)>0)){}		else{//反向代码写法，方便理解			//return;		}			try {				var url = contextPath + "/portal/dynaform/document/refreshFlowPanelHTML.action";				var datas = dy_getValuesMap(true);				datas["formid"]=formid;				datas["docid"]=docid;				datas["stateid"]=$("input[name='content.stateid']").val();				datas["userid"]=userid;				datas["flowid"]=flowid;				datas["actionType"]=actionType;				jQuery.ajax({					    type:"POST",      					    url:url,      					    data:datas,					    cache:false,					    dataType:"text",//预期服务器返回的数据类型。如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断					    async:true,   //true为异步请求，false为同步请求					    success:function(str){					    	try {								var $flowHtmlText = jQuery("#flowHtmlText").html(str);																var $currNodeId = jQuery("#_currid");								if ($currNodeId.size()>0 && $currNodeId.val()=="") {									$currNodeId.val(jQuery("#_currentNodeId").val());								}								switch(actionType) {									case "commitTo":										$flowHtmlText.find("#fieldset_return_to").remove();										break;									case "returnTo":										$flowHtmlText.find("#fieldset_commit_to").remove();										break;									case "init":									default:										var isFlowComplete = $("#isComplete").val();										if(isFlowComplete == "" || isFlowComplete == "false"){											FlowPanel._renderButtons();										}										$flowHtmlText.find("fieldset").hide();								}															//判断是否展开面板								if(act){									var isToPerson_Flag = FlowPanel._checkHideSubmitPanel();									if(isToPerson_Flag){										if(confirm("确认提交")){										    FlowPanel.flowCommitTo();										}									}else{										var $fieldset = $("#fieldset_commit_to");										var $fpdiv = $("#flowprocessDiv");																				if ($fieldset.is(":hidden") || $fieldset.size()==0) {//当前没有显示											$fpdiv.css({'opacity':'0.2'}).slideDown(150).fadeTo(200, 1);										}										else {											$fpdiv.slideUp(150);										}									}								}							} catch (ex) {								alert('refreshFlowPanel.callback(): ' + ex.message);							}					    },					    error:function (XMLHttpRequest, textStatus, errorThrown){					    	if("timeout"==textStatus){					    		FlowPanel.refreshFlowPanel(actionType);					    	}else{					    		OBPM.message.showError("刷新流程面板失败:"+textStatus);					    		//alert("刷新流程面板失败:"+textStatus);					    	}					        					    }					});			} catch (ex) {				alert('refreshFlowPanel: ' + ex.message);			}	},		/**检查是否选择抄送人*/	_checkIsSelectCirculator : function (){		var obj = document.getElementById("_circulator");		var _flowType = document.getElementById("_flowType").value;		/* 		if(obj && _flowType != '81'){			if(obj.value.length<=0){				alert("请选择抄送人！");				return false;			}		}		 */		return true;	},		/**检验选择指定审批人的节点是否已选择审批人*/	_checkToPerson : function (){		var nextids = document.getElementsByName('_nextids');		var _flowType = '';		if(document.getElementById("_flowType") != null){			_flowType = document.getElementById("_flowType").value;		}		for (var i=0; i<nextids.length; i++) {			var nodeid = nextids[i].value;			//是否指定审批人			var isToPerson = document.getElementById("isToPerson");			if((isToPerson && isToPerson.value == 'true') && nextids[i].checked){				var isNullUser = false;				if(document.getElementById("input_"+i) && document.getElementById("input_"+i).value==""){					isNullUser=true;				}else{					isNullUser=false;				}				// 提交到下一步				if(_flowType == '80'){					if(isNullUser){				        alert (Multilingual.specifyAuditor);						return false;					}				}			}		}		return true;	},	_checkHideSubmitPanel : function (){		var nextids = document.getElementsByName('_nextids');		var _flowType = '';		if(document.getElementById("_flowType") != null){			_flowType = document.getElementById("_flowType").value;		}				var isToPerson = document.getElementById("isToPerson");		var multiNodes = nextids.length > 1 ? true : false ;		var isToPerson = isToPerson && isToPerson.value == 'true' ? true : false ;		if(_flowType == '80'){			if(!isToPerson && !multiNodes){				return true;			}		}		return false;	},	/**流程处理*/	flowCommitTo : function() {		if(jQuery("#signature_box").is(":visible") ||  true){			var data = $sigdiv.jSignature('getData', "image");			if(data && data.length==2){				var signatureJson = '{"type":"'+data[0]+'","data":"'+data[1]+'"}';				$("input[name='_signature']").val(signatureJson);			}		}					if(!FlowPanel._checkIsSelectCirculator()){				return;			}						var nextids = document.getElementsByName('_nextids');						var isToPersonStr = '';			if(document.getElementById("isToPerson")!=null){				isToPersonStr = document.getElementById("isToPerson").value;			}			var flag = false;			var parameters ='';						if (nextids != null) {				if (!FlowPanel._checkToPerson()){					return;				}								for (var i=0; i<nextids.length; i++) {					if (nextids[i].type != 'select-one') {						if (nextids[i].checked) {							flag = true;							break;						}					} else {						if (nextids[i].value != null 						&& nextids[i].value != '') {							flag = true;							break;						}					}				}				if (flag) {					//设置流程类型为【提交-80】					if(document.getElementById("_flowType")){						document.getElementById("_flowType").value = "80";					}					var actid = jQuery("input[activityType='5']").attr("actid");					//执行提交流程按钮操作					FlowPanel._biuldsubFlowApproverInfoStr();					Activity.doExecute(actid,5);				}				else {					alert(Multilingual.chooseaction);				}			}			else {				alert (Multilingual.noaction);			}		},				flowReturnTo : function() {//			if(isToPerson || isToPersonStr =='true'){//				var input_back = 'null';//				if(document.getElementById("input_back") != null){//					input_back = document.getElementById("input_back").value;//				}//				if(input_back !='null' && input_back == ''){//					alert ('{*[cn.myapps.core.workflow.choose_specify_auditor]*}');//					return;//				}//			}						if (jQuery("#back").val()=='') {				alert('请选择需要回退的结点！');				return;			}						if(jQuery("#signature_box").is(":visible")){				var data = $sigdiv.jSignature('getData', "image");				if(data && data.length==2){					var signatureJson = '{"type":"'+data[0]+'","data":"'+data[1]+'"}';					$("input[name='_signature']").val(signatureJson);				}			}			//设置流程类型为【回退-81】			if(document.getElementById("_flowType")){				document.getElementById("_flowType").value = "81";			}			var actid = jQuery("input[activityType='5']").attr("actid");			if(toggleButton("button_act") || toggleButton("btn_act_returnto")) return false;//提交前把按钮变成灰色			//执行提交流程按钮操作			Activity.doExecute(actid,5);		},				/**自由流程启动**/		freeFlowStartUp : function(actid) {			//指定下一节点审批人			if ($("input[name='nextUserId']").val()=='') {				OBPM.message.showError('请选择审批人！');				return;			}			//手写签名			if(jQuery("#signature_box").is(":visible")){				var data = $sigdiv.jSignature('getData', "image");				if(data && data.length==2){					var signatureJson = '{"type":"'+data[0]+'","data":"'+data[1]+'"}';					$("input[name='_signature']").val(signatureJson);				}			}			//设置流程类型为【自由流程启动-1】			if(document.getElementById("_flowType")){				document.getElementById("_flowType").value = "1";			}			//执行提交流程按钮操作			Activity.doExecute(actid,5);		},				/**自由流程提交**/		freeFlowCommitTo : function(actid) {			//指定下一节点审批人			if ($("input[name='nextUserId']").val()=='') {				OBPM.message.showError('请选择审批人！');				return;			}			//手写签名			if(jQuery("#signature_box").is(":visible")){				var data = $sigdiv.jSignature('getData', "image");				if(data && data.length==2){					var signatureJson = '{"type":"'+data[0]+'","data":"'+data[1]+'"}';					$("input[name='_signature']").val(signatureJson);				}			}						//设置流程类型为【自由流程提交-80】			if(document.getElementById("_flowType")){				document.getElementById("_flowType").value = "80";			}			//执行提交流程按钮操作			Activity.doExecute(actid,5);		},				/**自由流程回退**/		freeFlowBackOff : function(actid) {			//指定下一节点审批人			if ($("input[name='nextUserId']").val()=='') {				OBPM.message.showError('请选择审批人！');				return;			}			//手写签名			if(jQuery("#signature_box").is(":visible")){				var data = $sigdiv.jSignature('getData', "image");				if(data && data.length==2){					var signatureJson = '{"type":"'+data[0]+'","data":"'+data[1]+'"}';					$("input[name='_signature']").val(signatureJson);				}			}						//设置流程类型为【自由流程回退-81】			if(document.getElementById("_flowType")){				document.getElementById("_flowType").value = "81";			}			//执行提交流程按钮操作			Activity.doExecute(actid,5);		},				/**自由流程结束**/		freeFlowComplete : function(actid) {			//设置流程类型为【自由流程结束-7】			if(document.getElementById("_flowType")){				document.getElementById("_flowType").value = "7";			}			//执行提交流程按钮操作			Activity.doExecute(actid,5);		},			/**子流程审批信息文本JSON格式*/		_biuldsubFlowApproverInfoStr : function (){			var result ='';			if(subFlowApproverInfo.length>0){				result+='[';			}			for(var i=0;i<subFlowApproverInfo.length;i++){				result+=subFlowApproverInfo[i]+',';			}			if(result.length>0){				result = result.substring(0,result.length-1);				result+=']';								jQuery("input[name='_subFlowApproverInfo']").val(result);			}		},				/**构建抄送信息文本JSON格式*/		_biuldCirculatorInfoStr : function (){			var result ='';			if(circulatorInfos.length>0){				result+='[';			}			for(var i=0;i<circulatorInfos.length;i++){				result+=circulatorInfos[i]+',';			}			if(result.length>0){				result = result.substring(0,result.length-1);				result+=']';								jQuery("input[name='_circulatorInfo']").val(result);			}		},			_renderButtons : function() {		var $ = jQuery;		var $flowProcessBtn = $("input[activityType='5']");		if(document.getElementById("_handup")){//流程挂起			var buttonName = jQuery("input[moduleType='handup']").attr("buttonname");			var nodertId = jQuery("input[moduleType='handup']").attr("nodertId");						var html = "<a class='vbtn btn btn-warning' id='act_flow_retracement' name='button_act' title=" + Multilingual.suspend + "  onclick='ev_flowHandup(\"" + nodertId + "\")' >"				+ "<i class='fa fa-pause'></i> "				+ buttonName				+ "</a>";			var $b = $(html);			$flowProcessBtn.after($b);		}else if(document.getElementById("_recover")){//流程恢复			var buttonName = jQuery("input[moduleType='recover']").attr("buttonname");			var nodertId = jQuery("input[moduleType='recover']").attr("nodertId");						var html = "<a class='vbtn btn btn-success' id='act_flow_retracement' name='button_act' title=" + Multilingual.recover + "  onclick='ev_flowRecover(\"" + nodertId + "\")' >"				+ "<i class='fa fa-play'></i> "				+ buttonName				+ "</a>";			var $b = $(html);			$flowProcessBtn.after($b);		}		if(document.getElementById("btn_retracement") && !document.getElementById('act_flow_retracement')){//渲染回撤按钮						var html = "<a class='vbtn btn btn-danger' id='act_flow_retracement' name='button_act' title=" + Multilingual.workflowRetracement + " onclick='doRetracement()' >"				+ "<i class='fa fa-reply-all'></i> "				+ Multilingual.workflowRetracement				+ "</a>";			var $b = $(html);			$flowProcessBtn.after($b);		}		if(document.getElementById("btn_addAuditor") && !document.getElementById('act_flow_addAuditor')){//渲染流程加签按钮			var html = "<a class='vbtn btn btn-default' id='act_flow_addAuditor' name='button_act' title=" + Multilingual.addAuditor + " onclick='addAuditor()' >"				+ "<i class='fa fa-pencil'></i> "				+ Multilingual.workflowAddAuditor				+ "</a>";			var $b = $(html);			$flowProcessBtn.after($b);		}		if(document.getElementById("btn_editAuditor") && !document.getElementById('act_flow_editAuditor')){//渲染编辑审批人按钮			var html = "<a class='vbtn btn btn-primary' id='act_flow_editAuditor' name='button_act' title=" + Multilingual.editAuditor + " onclick='editAuditor()' >"				+ "<i class='fa fa-user'></i> "				+ Multilingual.editAuditor				+ "</a>";			var $b = $(html);			$flowProcessBtn.after($b);		}		if(document.getElementById("btn_editFlow") && !document.getElementById('act_flow_editFlow')){//渲染调整流程按钮			var html = "<a class='vbtn btn btn-warning' id='act_flow_editFlow' name='button_act' title=" + Multilingual.workflowAdjustment + " onclick='editFlowByFrontUser()' >"				+ "<i class='fa fa-wrench'></i> "				+ Multilingual.workflowAdjustment				+ " </a>";			var $b = $(html);			$flowProcessBtn.after($b);		}		if(document.getElementById("btn_termination") && !document.getElementById('act_flow_termination')){//渲染终止流程按钮			var html = "<a class='vbtn btn btn-danger' id='act_flow_termination' name='button_act' title=" + Multilingual.flowTerminate + " onclick='terminateFlow()' >"				+ "<i class='fa fa-stop'></i> "				+ Multilingual.flowTerminate				+ " </a>";			var $b = $(html);			$flowProcessBtn.after($b);		}				if(document.getElementById("btn_back") && !document.getElementById('act_flow_back')){//渲染回退流程按钮			var html = "<a class='8 vbtn btn btn-warning' id='act_flow_back' href='##' name='button_act' title='回退'>"			+ "<i class='fa fa-reply-all'></i> 回退"			+ " </a>";			var $b = $(html);			$b.click(function(){				var $fieldset = $("#fieldset_return_to");				var $fpdiv = $("#flowprocessDiv");				if ($fieldset.is(":hidden") || $fieldset.size()==0) {//当前没有显示					//显示流程操作面板					//点击按钮时需要重新刷新					FlowPanel.refreshFlowPanel("returnTo");					//<button type='button' class='btn btn-green fr' name='btn_act_committo'>{*[Commit]*}</button>					var $btn = $("<button type='button' name='btn_act_returnto' class='btn btn-danger'><span>" + Multilingual.rejectConfirm + "</button>").click(function(){						//$(this).attr("disabled", "disabled");						FlowPanel.flowReturnTo();					});					$("#div_button_place").empty().append($btn);					$fpdiv.css({'opacity':'0.2'}).slideDown(150).fadeTo(200, 1);				}				else {					$fpdiv.slideUp(150);				}				FlowPanel.flowResizeHeight();			});			$flowProcessBtn.eq(0).after($b);		}				if(document.getElementById("btn_flow_reminder") && !document.getElementById('act_flow_reminder')){//渲染催办按钮			var html = "<a class='9 vbtn btn btn-primary' id='act_flow_reminder' name='button_act' title=" + Multilingual.reminder + ">"				+ "<i class='fa fa-fire'></i> "				+ Multilingual.reminder				+ " </a> ";			var $b = $(html);						var $t =  $("#btn_flow_reminder");			var noderts = $t.data("nodes");			for(var i=0;i<noderts.length;i++){				$('<lable><input type="checkbox" name="_nodertIds" value="'+noderts[i].nodertId+'" checked="checked" />'+noderts[i].nodeName+'</lable>').appendTo($(".flow-reminder-panel-node-list"));			}			$(".flow-reminder-panel-attitude textarea[name='_reminderContent']").bind('input oninput', function(){				$("#flow-reminder-counter .flow-reminder-num").html($(".flow-reminder-panel-attitude textarea[name='_reminderContent']").val().length); 			});			$("#btn-flow-reminder").on("click",function(e){				if($("input[name='_nodertIds']:checked").length<=0){					alert(Multilingual.nodeNeedReminders);					return;				}				if($("textarea[name='_reminderContent']").val().length<=0){					alert(Multilingual.theNoteReminders);					return;				} else if($("textarea[name='_reminderContent']").val().length>200) {					alert(Multilingual.noteTooLong);					return;				}			   	unbindBeforeUnload();				document.forms[0].action = contextPath + '/portal/dynaform/document/flowReminder.action';				if(toggleButton("button_act")) return false;//提交前把按钮变成灰色				makeAllFieldAble();				document.forms[0].submit();				showLoading();				layer.closeAll();			});						$b.click(function(){				var w = ($("#act").width()/3)*2;				layer.open({				   type: 1,				   title: false, 				   content: $("#flow-reminder-panel"), //捕获的元素				   area: w+'px',				   offset:'27px',//设置弹出层的top				   shade: 0,				   //shadeClose: true,				   //btn: ['提交', '取消'],				   yes: function(index, layero){										   },				   cancel: function(index){				        layer.close(index);				   }				});			});						$flowProcessBtn.after($b);		}		//Alvin	2014-12-23 用each()遍历出流程处理		2014-12-25 用icon设置更改后图标						$.each($flowProcessBtn , function(i,target){			var showtype = $(target).attr("flowshowtype");			var icon = "/portal/share/images/act/act_5.gif";			if($(target).attr("icon")!=null && isNaN($(target).attr("icon"))){				icon = "/lib/icon" + $(target).attr("icon");			}							var title = $(target).val();			var BtnStyle = 'btn-primary';			//按钮样式，默认值则保持不变 			switch($(target).attr("colorType")){			case "primary":				BtnStyle="btn-primary"				break;			case "success":				BtnStyle="btn-success"				break;			case "info":				BtnStyle="btn-info"				break;			case "warning":				BtnStyle="btn-warning"				break;			case "danger":				BtnStyle="btn-danger"				break;			default:				break;			}			var $b; 						var workFlowType = $(target).attr("workflowtype");				if(workFlowType == 0){ //预定流程				if(document.getElementById("btn_commit") && !document.getElementById('act_flow_submit'+i)){//渲染提交流程按钮					var html = "<a class='5 vbtn btn " + BtnStyle + "' href='#' id='act_flow_submit"+i+"' name='button_act' title='"					+title+"'><i class='fa fa-clock-o'></i> "					+ title					+ "</a>";				    $b = $(html);					$b.click(function(){						var $fieldset = $("#fieldset_commit_to");						var $fpdiv = $("#flowprocessDiv");												//点击按钮时需要重新刷新						FlowPanel.refreshFlowPanel("commitTo");						var $btn = $("<button type='button' class='btn btn-primary' name='btn_act_committo'>" + Multilingual.confirmTo + "</button>").click(function(){							//$(this).attr("disabled", "disabled");//锁住当前操作，避免重复提交							FlowPanel.flowCommitTo();							if(showtype=="ST02"){								layer.closeAll();							}							FlowPanel.flowResizeHeight();						});						$("#div_button_place").empty().append($btn);						//$fpdiv.css("opacity","0.2").slideDown("fast").fadeTo(200, 1);												if(showtype=="ST02"){							//捕获页							var w = $("#act").width()-30;							layer.open({							   type: 1,							   title: false, 							   content: $fpdiv, //捕获的元素							   area: w+'px',							   offset:'27px',//设置弹出层的top							   shade: .3,							   shadeClose: true,							   cancel: function(index){							        layer.close(index);							   }							});						}else if(showtype == "ST03"){							FlowPanel.refreshFlowPanel("commitTo",true); // 存在制定审批人和多节点的情况进行筛除						}else{							if ($fieldset.is(":hidden") || $fieldset.size()==0) {//当前没有显示								$fpdiv.css({'opacity':'0.2'}).slideDown(150).fadeTo(200, 1);							}else {								$fpdiv.slideUp(150);							}																				}						//非弹出层显示时计算页面高度						if(showtype!="ST02"){							FlowPanel.flowResizeHeight();						}					});					$(target).after($b);				}			}else if(workFlowType == 1){				     				     var flag = false ;					 var auditorList =jQuery("#auditorList").val();					 var userId = WebUser.id;					 					 if(auditorList){						 var author =  JSON.parse(auditorList);						 for(var index in author){							 if(index == userId){								 flag = true ;								 break ;							 }						 }					 }else{ //新建表单						 flag = true ;					 }					 					 if(flag){		     		 var stateid = $("input[name='content.stateid']").val();		     		 var actid = $(this).attr("actid");		     		 /**		     		  * 通过判断stateid,渲染不同的按钮（【提交、回退、结束】/【发起】 ）		     		  */					 if(stateid){						//-- 提交按钮 -- start 							var html = "<a class='5 vbtn btn " + "btn-primary" + "' href='#' id='act_flow_commitTo' name='button_act' title='"							+ title+" _提交流程' _flowType = '80' ><i class='fa fa-clock-o'></i> "							+ title+ "</a>";							$b = $(html);							$b.click(function(){								var type = "commit"								FlowProcess.renderFreePanel(actid,type);							});							$(target).after($b);					    //-- 提交按钮 -- end					    					    //-- 回退按钮  -- start					    var html = "<a class='10 vbtn btn " + "btn-warning" + "' href='#' id='act_flow_backOff' name='button_act' title='"							+title+"_回退流程' _flowType = '80' ><i class='fa fa-clock-o'></i> "							+"回退"							+ "</a>";							$b = $(html);							$b.click(function(){								var type = "back"								FlowProcess.renderFreePanel(actid,type);							});							$(target).after($b);					    //-- 回退按钮  -- end 					    					    					     //-- 结束流程按钮  -- start					     var html = "<a class='10 vbtn btn " + "btn-success" + "' href='#' id='act_flow_complete' name='button_act' title='"							+title+"_结束流程' _flowType = '7' ><i class='fa fa-clock-o'></i> "							+"结束流程"							+ "</a>";							$b = $(html);							$b.click(function(){								var type = "end"								FlowProcess.renderFreePanel(actid,type);							});							$(target).after($b);					    //--  结束流程按钮  -- end 										 }else{						//-- 发起按钮 -- start 							var html = "<a class='10 vbtn btn " + "btn-primary" + "' href='#' id='act_flow_startup' name='button_act' title='"							+title+"_发起流程' _flowType = '1' ><i class='fa fa-clock-o'></i> "							+title							+ "</a>";							$b = $(html);							$b.click(function(){								var type = "start"								FlowProcess.renderFreePanel(actid,type);							});							$(target).after($b);					    //-- 提交按钮 -- end					 }					}				}		})			},			/*	*	子流程节点选择审批人		*/       	showUserSelectOnSubFlow : function (actionName, settings){		var appId =  jQuery("input[activityType='5']").attr("applicationid");		var url = contextPath + '/portal/share/user/selectApprover4Subflow.jsp?application='+appId;		url += "&docid=" + settings.docid + "&instanceId=" + settings.instanceId+"&numberSetingType=" + settings.numberSetingType+"&instanceTotal=" + settings.instanceTotal+"&nodeid=" + settings.nextNodeId+"&flowid="+ settings.flowid;		//var jsonStr = jQuery("input[name='_subFlowApproverInfoAll']").val();		var jsonStr = getSubFlowApproverInfo(settings.nextNodeId);		//var nodeid = "123456789";		var value = '';		OBPM.dialog.show({			width: 700,			height:500,			url: url,			args: {value: value, readonly: settings.readonly,numberSetingType: settings.numberSetingType,instanceTotal: settings.instanceTotal,nodeid: settings.nextNodeId,jsonStr: jsonStr},			//args: {"instanceTotal": 5,"nodeid": nodeid,"jsonStr": jsonStr},			title: Multilingual.userSelect,			ok: null,			cancel: null,			button: null,			close: function(jsonObj) {				if(jsonObj != null){					//alert(JSON.stringify(jsonObj));															FlowPanel._addSubFlowApproverInfo(subFlowApproverInfoAll,settings.nextNodeId,JSON.stringify(jsonObj));										//jQuery("input[name='_subFlowApproverInfoAll']").val(JSON.stringify(jsonObj));					//去除names属性					var approverObj = JSON.parse(jsonObj.approver);					var nameStr = "";					//alert(approverObj.length);					for(var i = 0; i < approverObj.length; i++){						if(i != 0)nameStr += ',';						nameStr += approverObj[i].names;						delete approverObj[i].names;					}					jQuery("input[name="+ settings.textField +"]").val(nameStr);					jsonObj.approver = approverObj;					//alert("after delete ==> " + JSON.stringify(jsonObj));					//-----------------------------------------------------					//alert(JSON.stringify(jsonObj));					FlowPanel._addSubFlowApproverInfo(subFlowApproverInfo,settings.nextNodeId,JSON.stringify(jsonObj));										//biuldsubFlowApproverInfoStr();																									//-----------------------------------------------------										//jQuery("input[name='_subFlowApproverInfo']").val(JSON.stringify(jsonObj));				}				//组装 json 字符串 并赋值到 一个name为“_subFlowApproverInfo”隐藏域里 作为参数提交到后台处理			}		});	},	_addSubFlowApproverInfo : function(Obj,nodeId,info){		var falg =true;		for(var i=0;i<Obj.length;i++){			var tmp =Obj[i];			if(tmp.indexOf(nodeId)>0){				Obj[i] =info;				falg = false;				break;			}		}		if(falg){			Obj.push(info);		}	},		showUserSelect : function(actionName, settings) {		var appId =  jQuery("input[activityType='5']").attr("applicationid");		var url = contextPath + '/portal/share/user/selectbyflow.jsp?application='+appId;		url += "&docid=" + settings.docid + "&nodeid=" + settings.nextNodeId+"&flowid="+ settings.flowid;		var valueField = document.getElementById(settings.valueField);		var value = "";		if (valueField){			value = valueField.value;		}				var ids = document.getElementById(settings.hiddenIds).value;		var icons;		var _path;		if(skinType == "H5"){			icons = "icons_4";			_path = "../H5/resource/component/artDialog"		}else{			icons = "";			_path = "";		}		OBPM.dialog.show({			width: 682,			height: 500,			url: url,			icon:icons,			path: _path,			//args: {parentObj: window, idField: "submitTo", nameField: settings.textField, readonly: settings.readonly},			args: {value: value, readonly: settings.readonly,"applicationid":appId,"defValue":ids},			title: Multilingual.flowUserSelect,			ok: null,			cancel: null,			button: null,			close: function(result) {				selectFlag = true;				var rtn = result;				var field = document.getElementById(settings.textField);				if (field) {					if (rtn) {						isToPerson = true;						if (rtn[0] && rtn.length > 0) {							var rtnValue = '';							var rtnText = '';							//userid多个以","分隔							var selectedNode=document.getElementById(settings.nextNodeId);							//用户选择曾经选过的节点							var submitTo = document.getElementById("submitTo").value;							if(submitTo==null || submitTo==""){                                 submitTo = "[";							}else{								if(submitTo.lastIndexOf("]")!=-1){								 	submitTo = submitTo.substr(0,submitTo.lastIndexOf("]"));								 	submitTo = submitTo +',';								}							}							var start=submitTo.indexOf(settings.nextNodeId)+settings.nextNodeId.length+34;							if(submitTo.indexOf(settings.nextNodeId)>0){								var strfront=submitTo.substr(0,start);								var strtemp=submitTo.substr(start+1,submitTo.length);								if(strtemp.substr(strtemp.length-1,strtemp.length)==","){									strtemp = strtemp.substr(0,strtemp.length-1);								}								var strfoot=strtemp.substr(strtemp.indexOf("]",0)-1,strtemp.length);								submitTo=strfront;								for (var i = 0; i < rtn.length; i++) {									rtnValue += rtn[i].value + ";";									rtnText += rtn[i].text + ";";									submitTo+="'"+rtn[i].value+"',";								}								//submitTo= submitTo.replace('"userids":"','"userids":"[');								submitTo=submitTo.substring(0,submitTo.length-2);								submitTo+=strfoot;								document.getElementById(settings.hiddenIds).value = rtnValue.substring(0, rtnValue.lastIndexOf(";"));							}							else{								submitTo+="{\"nodeid\":'"+settings.nextNodeId+"',\"isToPerson\":'true',\"userids\":\"[";								var userids="";								for (var i = 0; i < rtn.length; i++) {									rtnValue += rtn[i].value + ";";									rtnText += rtn[i].text + ";";									userids+="'"+rtn[i].value+"',";								}								userids=userids.substring(0,userids.length-1); 								submitTo+=userids+"]\"}";								document.getElementById(settings.hiddenIds).value = rtnValue.substring(0, rtnValue.lastIndexOf(";"));							}							document.getElementById("submitTo").value = submitTo+"]";							valueField.value = rtnValue.substring(0, rtnValue.lastIndexOf(";"));							var text = rtnText.substring(0, rtnText.lastIndexOf(";"));							field.value = text;							field.title = text;						}else{							valueField.value = '';							field.value = '';							field.title = '';							document.getElementById("submitTo").value = '';							document.getElementById(settings.hiddenIds).value = '';							isToPerson = false;						}					} else {											}								if (settings.callback) {						settings.callback(valueField.name);					}				}			}		});	},	/**	 * 重新设置内容高度	 */	flowResizeHeight : function(){		setTimeout(function(){			var winH = $(window).height();			var activityTableH = $("#activityTable").outerHeight();			var flowprocessH = $("#flowprocessDiv").is(":visible") ? $("#flowprocessDiv").outerHeight() : 0;			var $contentTable = $("#_contentTable")			$contentTable.height(winH - activityTableH - flowprocessH - 30)			$contentTable.getNiceScroll().resize();		},450)	}};var circulatorInfos =[];/***指定抄送人***/function selectCirculator(actionName, settings) {	var url = contextPath + '/portal/share/user/selectCirculatorByFlow.jsp?application='+application;	url += "&docid=" + settings.docid + "&nodeid=" + settings.nextNodeId+"&flowid="+ settings.flowid;	var valueField = document.getElementById(settings.valueField);	var value = "";	if (valueField){		value = valueField.value;	}	OBPM.dialog.show({		width: 682,		height: 500,		url: url,		args: {			// p1:当前窗口对象			"parentObj" : window,			// p2:存放userid的容器id			"targetid" : "_circulatorInfo",			// p3:存放username的容器id			"receivername" : settings.textField,			// p4:默认选中值, 格式为[userid1,userid2]			"defValue": settings.defValue,			//选择用户数			"limitSum": settings.limitSum,			//选择模式			"selectMode":settings.selectMode		},		title: Multilingual.flowUserSelect,		ok: null,		cancel: null,		button: null,		close: function(result) {			selectFlag = true;			var rtn = result;			var field = document.getElementById(settings.textField);			if (field) {				if (rtn) {					var rtnValue = '';					var rtnText = '';					for (var i = 0; i < rtn.length; i++) {						rtnValue += '"'+ rtn[i].value + '",';						rtnText += rtn[i].text + ";";					}					if(rtnValue.length>0){						rtnValue = rtnValue.substring(0,rtnValue.length-1);						rtnValue = '['+rtnValue+']';						var circulatorInfo ='{circulator:'+rtnValue+'}';						circulatorInfos[0] = circulatorInfo;						//addCirculatorInfo(circulatorInfos,settings.nextNodeId,circulatorInfo);						biuldCirculatorInfoStr();					}					var text = (rtnText == ''? rtnText:rtnText.substring(0,rtnText.length-1));					field.value = text;					field.title = text;				}else {					if (rtn == '') { // 清空						field.value = '';						field.title = '';						circulatorInfos[0] ='';						document.getElementById("_circulatorInfo").value = '';					}				}			}		}	});}//获得json的key值function leng(data){	var jsonLength = 0;	var a = [];	for(var item in data){		a.push(item);	}	return a;}/**	子流程节点选择审批人	*/       function showUserSelectOnSubFlow(actionName, settings){	FlowPanel.showUserSelectOnSubFlow(actionName, settings);}/**不想改变服务器端输出HTML文本结构（虽然并不喜欢），在此保留一个接口*/function showUserSelect(actionName, settings) {	FlowPanel.showUserSelect(actionName, settings);} /** *设置流程类型  *服务器端输出的html中输出的组件会调用此JavaScript方法， * 不想改变服务器端输出，因此保留一个空的方法接口，避免浏览器错误 */ function ev_setFlowType(isOthers, element, flowOperation) {	//Nothing...} function getSubFlowApproverInfo(nodeId){		for(var i=0;i<subFlowApproverInfoAll.length;i++){			var tmp =subFlowApproverInfoAll[i];			if(tmp.indexOf(nodeId)>0){				return tmp;			}		}		return '';	}function addCirculatorInfo(Obj,nodeId,info){	var falg =true;	for(var i=0;i<Obj.length;i++){		var tmp =Obj[i];		if(tmp.indexOf(nodeId)>0){			Obj[i] =info;			falg = false;			break;		}	}	if(falg){		Obj.push(info);	}}function biuldCirculatorInfoStr(){	var result ='';	if(circulatorInfos.length>0){		result+='[';	}	for(var i=0;i<circulatorInfos.length;i++){		result+=circulatorInfos[i]+',';	}	if(result.length>0){		result = result.substring(0,result.length-1);		result+=']';				jQuery("input[name='_circulatorInfo']").val(result);	}	//alert("result==" +result);	//alert(jQuery("input[name='_circulatorInfo']").val());	}function checkIsSelectCirculator(){	var obj = document.getElementById("_circulator");	var _flowType = document.getElementById("_flowType").value;	/* if(obj && _flowType != '81'){		if(obj.value.length<=0){			alert("请选择抄送人！");			return false;		}	} */	return true;}